{"version":3,"sources":["utils/theme.js","redux/requests/AuthRequests.jsx","redux/requests/ItemRequests.jsx","utils/ColorModeSwitcher.js","redux/slices/ErrorSlice.jsx","components/Register.jsx","components/SignIn.jsx","redux/slices/AuthSlice.jsx","components/SignOut.jsx","components/AppNavbar.jsx","components/PageContainer.jsx","components/AddItem.jsx","components/ShoppingList.jsx","App.js","reportWebVitals.js","serviceWorker.js","redux/slices/ShoppingListSlice.jsx","redux/configureStore.jsx","index.js"],"names":["customTheme","extendTheme","colors","error","theme","red","primary","teal","success","green","backgroundColor","light","gray","dark","boxBackgroundColor","whiteAlpha","placeholder","tokenConfig","getState","token","auth","config","headers","loadUser","createAsyncThunk","_","a","rejectWithValue","axios","get","res","user","data","response","status","registerUser","name","email","password","body","JSON","stringify","post","id","loginUser","getShoppingList","addItem","new_item","deleteItem","delete","checkItem","isChecked","patch","ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","aria-label","variant","color","marginLeft","onClick","icon","errorSlice","createSlice","initialState","msg","extraReducers","rejected","state","action","payload","reducers","clearErrors","actions","Register","useSelector","isAuthenticated","dispatch","useDispatch","useDisclosure","isOpen","onOpen","onClose","useForm","handleSubmit","register","formState","errors","isSubmitting","isSubmitted","onSubmit","values","useEffect","useState","didMount","setDidMount","colorScheme","width","base","md","pb","isInvalid","ref","validate","value","test","autoFocus","message","mt","type","isLoading","loadingText","m","w","SignIn","authSlice","localStorage","getItem","pending","fulfilled","setItem","removeItem","authError","logout","SignOut","AppNavbar","useMediaQuery","isLargerThan48em","justifyContent","alignItems","position","minW","bg","h","zIndex","boxShadow","px","py","my","mx","lg","spacing","flexShrink","fontWeight","href","as","IconButton","Hamburger","p","orientation","PageContainer","colorMode","minH","flexDirection","height","pt","children","AddItem","toast","useToast","item","Add","isRound","title","description","duration","isClosable","mr","ShoppingList","shoppingList","loadingShoppingList","rounded","direction","justifySelf","display","ml","length","map","index","in","Check","_id","opacity","alignSelf","flexGrow","isTruncated","Delete","isIndeterminate","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","shoppingListSlice","filter","console","log","store","configureStore","reducer","shoppingListReducer","authReducer","errorReducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0095cb45.chunk.js","sourcesContent":["import { extendTheme, theme } from \"@chakra-ui/react\";\n\n\n\nconst customTheme = extendTheme({\n  colors: {\n    error: theme.colors.red,\n    primary: theme.colors.teal,\n    success: theme.colors.green,\n    backgroundColor: {\n      light: theme.colors.gray['100'],\n      dark: theme.colors.gray['800']\n    },\n    boxBackgroundColor: {\n      light: theme.colors.whiteAlpha['900'],\n      dark: theme.colors.gray['700']\n    },\n    placeholder: {\n      light: theme.colors.gray['400'],\n      dark: theme.colors.whiteAlpha['400']\n    }\n  }\n});\n\nexport default customTheme;","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\nexport const tokenConfig = getState => {\n  // get token from localStorage\n  const token = getState().auth.token;\n\n  const config = {\n    headers: {\n      \"Content-type\": \"application/json\",\n    }\n  };\n\n  // if token, add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n\n\n// Check token and load token\nexport const loadUser = createAsyncThunk('auth/loadUser',\n  async (_, { getState, rejectWithValue }) => {\n    //fetch the user\n    try {\n      const res = await axios.get('/api/auth/user', tokenConfig(getState));\n      return { user: res.data };\n\n    } catch (err) {\n      return rejectWithValue({ data: err.response.data, status: err.response.status });\n    }\n  });\n\n// Register user\nexport const registerUser = createAsyncThunk('auth/registerUser',\n  async ({ name, email, password }, { rejectWithValue }) => {\n    // Headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Request body\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n      const res = await axios.post('/api/users', body, config);\n      return res.data;\n\n    } catch (err) {\n      return rejectWithValue({ data: err.response.data, status: err.response.status, id: 'REGISTER_FAIL' });\n    }\n  });\n\n\n// Login User\nexport const loginUser = createAsyncThunk('auth/loginUser',\n  async ({ email, password }, { rejectWithValue }) => {\n    // Headers\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    // Request body\n    const body = JSON.stringify({ email, password });\n\n    try {\n      const res = await axios.post('/api/auth', body, config);\n      return res.data;\n\n    } catch (err) {\n      return rejectWithValue({ data: err.response.data, status: err.response.status, id: 'LOGIN_FAIL' });\n    }\n  });\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\n\nimport { tokenConfig } from './AuthRequests';\n\n\nexport const getShoppingList = createAsyncThunk(\"shoppingList/getShoppingList\", async (_, { rejectWithValue }) => {\n  try {\n\n    const res = await axios.get('/api/items');\n    return res.data;\n\n  } catch (err) {\n    return rejectWithValue({ data: err.response.data, status: err.response.status });\n  }\n});\n\nexport const addItem = createAsyncThunk(\"shoppingList/addItem\",\n  async (new_item, { rejectWithValue, getState }) => {\n\n    try {\n      await axios.post('/api/items', new_item, tokenConfig(getState));\n      return new_item;\n\n    } catch (err) {\n      return rejectWithValue({ data: err.response.data, status: err.response.status });\n    }\n\n\n  });\n\nexport const deleteItem = createAsyncThunk(\"shoppingList/deleteItem\",\n  async ({ id }, { rejectWithValue, getState }) => {\n    try {\n      await axios.delete(`/api/items/${id}`, tokenConfig(getState));\n      return { id };\n    } catch (err) {\n      return rejectWithValue({ data: err.response.data, status: err.response.status });\n    }\n  });\n\nexport const checkItem = createAsyncThunk(\"shoppingList/checkItem\",\n  async ({ id, isChecked }, { rejectWithValue, getState }) => {\n\n    try {\n      await axios.patch(`/api/items/${id}`, { isChecked }, tokenConfig(getState));\n      return { id };\n\n    } catch (err) {\n      return rejectWithValue({ data: err.response.data, status: err.response.status });\n    }\n  });\n\n","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import { createSlice } from \"@reduxjs/toolkit\";\n\n\nimport { loadUser, registerUser, loginUser } from '../requests/AuthRequests';\n\nimport { getShoppingList, addItem, deleteItem, checkItem } from '../requests/ItemRequests';\n\nconst errorSlice = createSlice({\n  name: 'error',\n  initialState: {\n    msg: {},\n    status: null,\n    id: null\n  },\n\n  extraReducers: {\n    [loadUser.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = null;\n    },\n    [registerUser.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = action.payload.id;\n    },\n    [loginUser.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = action.payload.id;\n    },\n\n    [getShoppingList.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = action.payload.id;\n    },\n    [addItem.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = action.payload.id;\n    },\n    [deleteItem.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = action.payload.id;\n    },\n    [checkItem.rejected]: (state, action) => {\n      state.msg = action.payload.data.msg;\n      state.status = action.payload.status;\n      state.id = action.payload.id;\n    },\n\n  },\n\n\n  reducers: {\n    clearErrors: (state, action) => {\n      state.msg = {};\n      state.id = null;\n      state.status = null;\n    }\n  },\n\n});\n\nexport const { clearErrors } = errorSlice.actions;\n\nexport default errorSlice.reducer;\n","import {\n  Button,\n  FormControl, FormLabel, FormErrorMessage,\n  Input,\n  Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay,\n  useDisclosure,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../redux/requests/AuthRequests';\nimport { clearErrors } from '../redux/slices/ErrorSlice';\n\n\nconst Register = ({ variant = 'solid' }) => {\n\n  const error = useSelector(state => state.error);\n  const { isAuthenticated } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n\n\n  const { handleSubmit, register, formState, errors } = useForm();\n  const { isSubmitting, isSubmitted } = formState;\n\n\n  const onSubmit = async (values) => {\n    await dispatch(clearErrors());\n    // Attempt to register\n    await dispatch(registerUser({ name: values.name, email: values.email, password: values.password }));\n\n    if (isAuthenticated) {\n      onClose();\n    }\n  };\n\n\n  const validateName = (value) => {\n    const regex = /^[a-zA-Z ]{2,30}$/;\n\n    if (!value) {\n      return 'Name is required';\n    } else if (!regex.test(value)) {\n      return 'Only alphabets are allowed';\n    } else return true;\n  };\n\n  const validateEmail = (value) => {\n    const regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!value) {\n      return 'Email is required';\n    } else if (!regex.test(value)) {\n      return 'Enter a valid email';\n    } else return true;\n  };\n\n  const validatePassword = (value) => {\n\n    if (!value) {\n      return 'Password is required';\n    } else return true;\n  };\n\n\n\n  useEffect(() => {\n    dispatch(clearErrors());\n  }, [isOpen]);\n\n  const [didMount, setDidMount] = useState(false);\n\n\n  useEffect(() => {\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, []);\n\n  if (!didMount) {\n    return null;\n  }\n\n  return (\n    <>\n\n      <Button colorScheme=\"primary\"\n        variant={variant}\n        onClick={onOpen} >Register</Button>\n\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <ModalOverlay />\n        <ModalContent\n          width={{ base: '90%', md: '400px' }}\n        >\n\n          <ModalHeader>Register</ModalHeader>\n          <ModalCloseButton />\n          {(error.id === 'REGISTER_FAIL' && isSubmitted === true) &&\n            <Alert status=\"error\">\n              <AlertIcon />\n              {error.msg}\n            </Alert>\n          }\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <ModalBody pb={6}>\n              <FormControl isInvalid={errors.name}>\n                <FormLabel>Name</FormLabel>\n                <Input placeholder=\"Name\" name='name' ref={register({ validate: validateName })} autoFocus />\n                <FormErrorMessage>\n                  {errors.name && errors.name.message}\n                </FormErrorMessage>\n              </FormControl>\n\n\n              <FormControl mt={4} isInvalid={errors.email}>\n                <FormLabel>Email</FormLabel>\n                <Input placeholder=\"Email\" name='email' ref={register({ validate: validateEmail })} />\n                <FormErrorMessage>\n                  {errors.email && errors.email.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl mt={4} isInvalid={errors.password}>\n                <FormLabel>Password</FormLabel>\n                <Input placeholder=\"Password\"\n                  type='password'\n                  name='password' ref={register({ validate: validatePassword })} />\n                <FormErrorMessage>\n                  {errors.password && errors.password.message}\n                </FormErrorMessage>\n              </FormControl>\n\n            </ModalBody>\n\n            <ModalFooter>\n              <Button type='submit' colorScheme=\"success\"\n                isLoading={isSubmitting}\n                loadingText=\"Please wait..\"\n                m='0'\n                w='100%'\n              >\n                Register\n            </Button>\n\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n\n    </>\n  );\n};\n\nexport default Register;\n\n\n","import {\n  Button,\n  FormControl, FormLabel, FormErrorMessage,\n  Input,\n  Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay,\n  useDisclosure,\n  Alert,\n  AlertIcon,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\n\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loginUser } from '../redux/requests/AuthRequests';\nimport { clearErrors } from '../redux/slices/ErrorSlice';\n\n\nconst SignIn = ({ variant = 'link' }) => {\n\n  const error = useSelector(state => state.error);\n  const { isAuthenticated } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n\n  // form hook\n  const { handleSubmit, register, formState, errors } = useForm();\n  const { isSubmitting, isSubmitted } = formState;\n\n\n  const onSubmit = async (values) => {\n    await dispatch(clearErrors());\n    // Attempt to register\n    await dispatch(loginUser({ email: values.email, password: values.password }));\n\n    if (isAuthenticated) onClose();\n  };\n\n\n\n  const validateEmail = (value) => {\n    const regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!value) {\n      return 'Email is required';\n    } else if (!regex.test(value)) {\n      return 'Enter a valid email';\n    } else return true;\n  };\n\n  const validatePassword = (value) => {\n\n    if (!value) {\n      return 'Password is required';\n    } else return true;\n  };\n\n\n  const [didMount, setDidMount] = useState(false);\n\n\n  useEffect(() => {\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, []);\n\n  if (!didMount) {\n    return null;\n  }\n\n\n  return (\n    <>\n\n      <Button colorScheme=\"primary\"\n        variant={variant}\n        onClick={onOpen} >Sign In</Button>\n\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <ModalOverlay />\n        <ModalContent\n          width={{ base: '90%', md: '400px' }}\n        >\n          <ModalHeader>Sign In</ModalHeader>\n          <ModalCloseButton />\n          {(error.id === 'LOGIN_FAIL' && isSubmitted === true) &&\n            <Alert status=\"error\">\n              <AlertIcon />\n              {error.msg}\n            </Alert>\n          }\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <ModalBody pb={6}>\n\n              <FormControl isInvalid={errors.email}>\n                <FormLabel>Email</FormLabel>\n                <Input placeholder=\"Email\" name='email' ref={register({ validate: validateEmail })} autoFocus />\n                <FormErrorMessage>\n                  {errors.email && errors.email.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl mt={4} isInvalid={errors.password}>\n                <FormLabel>Password</FormLabel>\n                <Input placeholder=\"Password\"\n                  type='password'\n                  name='password' ref={register({ validate: validatePassword })} />\n                <FormErrorMessage>\n                  {errors.password && errors.password.message}\n                </FormErrorMessage>\n              </FormControl>\n\n            </ModalBody>\n\n            <ModalFooter>\n              <Button type='submit' colorScheme=\"success\"\n                isLoading={isSubmitting}\n                loadingText=\"Please wait..\"\n                m='0'\n                w='100%'\n              >\n                Sign In\n            </Button>\n\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n\n    </>\n  );\n};\n\nexport default SignIn;\n\n\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { loadUser, registerUser, loginUser } from '../requests/AuthRequests';\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null,\n  },\n  extraReducers: {\n    [loadUser.pending]: (state, action) => {\n      state.isLoading = true;\n    },\n    [loadUser.rejected]: (state, action) => {\n      state.isLoading = false;\n    },\n    [loadUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n    },\n\n    [registerUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n\n      localStorage.setItem('token', action.payload.token);\n    },\n    [registerUser.rejected]: (state, action) => {\n      localStorage.removeItem('token');\n\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n    },\n\n    [loginUser.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n\n      localStorage.setItem('token', action.payload.token);\n    },\n    [loginUser.rejected]: (state, action) => {\n      localStorage.removeItem('token');\n\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n    }\n  },\n\n  reducers: {\n\n    authError: (state, action) => {\n\n      localStorage.removeItem('token');\n\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n    },\n\n\n    logout: (state, action) => {\n\n      localStorage.removeItem('token');\n\n      state.token = null;\n      state.user = null;\n      state.isAuthenticated = false;\n      state.isLoading = false;\n    },\n\n  }\n});\n\nexport const { logout } = authSlice.actions;\n\nexport default authSlice.reducer;\n\n","import {\n  Button,\n} from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\n\n\n// Redux\nimport { useDispatch } from 'react-redux';\n\nimport { logout } from '../redux/slices/AuthSlice';\n\nconst SignOut = ({ variant = 'outline' }) => {\n\n\n  const dispatch = useDispatch();\n\n\n  const [didMount, setDidMount] = useState(false);\n\n\n  useEffect(() => {\n    setDidMount(true);\n    return () => setDidMount(false);\n  }, []);\n\n  if (!didMount) {\n    return null;\n  }\n\n\n  return (\n\n    <Button colorScheme=\"primary\"\n      variant={variant}\n      onClick={() => dispatch(logout())}\n    >Sign Out</Button>\n  );\n\n};\n\nexport default SignOut;\n\n\n","import React from \"react\";\nimport {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  Menu,\n  MenuButton,\n  IconButton,\n  MenuList,\n  Stack,\n  useMediaQuery,\n  Divider\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\n\n\nimport { useSelector } from 'react-redux';\n\nimport { ColorModeSwitcher } from '../utils/ColorModeSwitcher';\n\nimport Register from './Register';\nimport SignIn from './SignIn';\nimport SignOut from './SignOut';\n\nconst AppNavbar = () => {\n\n  const { isAuthenticated } = useSelector(state => state.auth);\n\n  const [isLargerThan48em] = useMediaQuery(\"(min-width: 48em)\");\n\n\n  return (\n\n    <Flex\n      justifyContent='space-between'\n      alignItems='center'\n      position='fixed'\n      minW='100%'\n      bg={'inherit'}\n      h={16}\n      zIndex={4}\n      boxShadow='lg'\n    >\n      {isLargerThan48em ?\n        <Flex\n          px={{ base: 4 }}\n          py={{ base: 2 }}\n          alignItems='center'\n          justifyContent=\"space-between\"\n          my={2}\n          mx='auto'\n          width={{ base: '90%', lg: '75%' }}\n        >\n          <HStack spacing={4} flexShrink='1'>\n            <Box fontWeight='bold' fontSize='lg'>\n              <Link href='/'>Shopping List</Link>\n            </Box>\n            <ColorModeSwitcher />\n          </HStack>\n\n          {isAuthenticated ?\n            <SignOut />\n            :\n            <HStack spacing={4} flexShrink='1' >\n              <SignIn />\n              <Register />\n            </HStack>\n          }\n        </Flex>\n        :\n        <Flex\n          px={{ base: 4 }}\n          py={{ base: 2 }}\n          alignItems='center'\n          justifyContent=\"space-between\"\n          my={2}\n          mx='auto'\n          width={{ base: '90%', lg: '75%' }}\n        >\n\n          <ColorModeSwitcher />\n\n          <Box fontWeight='bold' fontSize='lg' >\n            <Link href='/'>Shopping List</Link>\n          </Box>\n\n\n          {isAuthenticated ?\n            <SignOut />\n\n            :\n\n            <Menu >\n              <MenuButton\n                as={IconButton}\n                icon={<HamburgerIcon />}\n                variant='outline'\n              />\n              <MenuList>\n                <Stack p={2}>\n                  <SignIn />\n\n                  <Divider orientation=\"horizontal\" mt={2} />\n                  <Register variant='link' />\n                </Stack>\n              </MenuList>\n            </Menu>\n\n          }\n        </Flex>\n      }\n    </Flex>\n  );\n};\n\nexport default AppNavbar;","import React from 'react';\nimport { Flex, useColorMode } from '@chakra-ui/react';\n\nimport AppNavbar from './AppNavbar';\n\nconst PageContainer = (props) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Flex\n      minH='100vh'\n      width='100%'\n      flexDirection='column'\n      bg={colorMode === 'light' ? 'backgroundColor.light' : 'backgroundColor.dark'}\n      pb={4}\n    >\n      <AppNavbar />\n      <Flex\n        height='100%'\n        width='100%'\n        alignItems=\"center\"\n        justifyContent=\"top\"\n        flexDirection=\"column\"\n        pt={24}\n      >\n        {props.children}\n      </Flex>\n      {/* <Footer /> */}\n    </Flex>\n  );\n};\n\nexport default PageContainer;","import {\n  Button,\n  FormControl, FormLabel, FormErrorMessage,\n  IconButton,\n  Input,\n  Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay,\n  useDisclosure,\n  useToast\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addItem } from '../redux/requests/ItemRequests';\n\n// Icons\nimport { AddIcon } from '@chakra-ui/icons';\n\nconst AddItem = () => {\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n\n  const { isAuthenticated } = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n\n  const { handleSubmit, register, formState, errors } = useForm();\n  const { isSubmitting } = formState;\n\n\n  const onSubmit = async (values) => {\n    await dispatch(addItem({ name: values.item }));\n    onClose();\n  };\n\n  function validateItem (value) {\n    if (!value) {\n      return \"Item is required\";\n    } else return true;\n  }\n\n  const handleAdd = () => {\n    if (isAuthenticated) {\n      onOpen();\n    } else {\n      toast({\n        title: \"Unauthorised access\",\n        description: \"Please login to add an item.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n\n  return (\n    <>\n      <IconButton\n        aria-label='Add'\n        icon={<AddIcon />}\n        size='lg'\n        isRound\n        colorScheme='success'\n        variant='solid'\n        onClick={handleAdd}\n      />\n      <Modal\n        isOpen={isOpen}\n        onClose={onClose}\n      >\n        <ModalOverlay />\n        <ModalContent\n\n          width={{ base: '90%', md: '400px' }}\n        >\n          <ModalHeader>Add Item</ModalHeader>\n          <ModalCloseButton />\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <ModalBody pb={6}>\n              <FormControl isInvalid={errors.item}>\n                <FormLabel>Item</FormLabel>\n                <Input placeholder=\"Item\" name='item' ref={register({ validate: validateItem })} autoFocus\n                />\n                <FormErrorMessage>\n                  {errors.item && errors.item.message}\n                </FormErrorMessage>\n              </FormControl>\n            </ModalBody>\n\n            <ModalFooter>\n              <Button type='submit' colorScheme=\"success\" mr={3}\n                isLoading={isSubmitting}\n                loadingText=\"Please wait..\"\n              >\n                Save\n            </Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ModalFooter>\n          </form>\n        </ModalContent>\n      </Modal>\n\n    </>\n  );\n};\n\nexport default AddItem;\n\n\n","import {\n  Flex,\n  IconButton,\n  List,\n  ListItem,\n  Text,\n  useColorMode,\n  Fade,\n  HStack,\n  Badge,\n  Divider,\n  CircularProgress,\n  useToast,\n} from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\n\n// Icons\nimport { CheckIcon, DeleteIcon } from '@chakra-ui/icons';\n\n// Redux\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteItem, checkItem, getShoppingList } from '../redux/requests/ItemRequests';\n\n// other imports\nimport PageContainer from './PageContainer';\nimport AddItem from './AddItem';\n\nconst ShoppingList = () => {\n  const { colorMode } = useColorMode();\n  const toast = useToast();\n\n  const { isAuthenticated, user } = useSelector(state => state.auth);\n\n  const { name = 'name' } = user || {};\n\n\n  const { shoppingList, loadingShoppingList } = useSelector(state => state.shoppingList);\n  const dispatch = useDispatch();\n\n\n  const handleDelete = (value) => {\n    if (isAuthenticated) {\n      dispatch(deleteItem(value));\n    } else {\n      toast({\n        title: \"Unauthorised access\",\n        description: \"Please login to make any changes.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  const handleCheck = (value) => {\n    if (isAuthenticated) {\n      dispatch(checkItem(value));\n    } else {\n      toast({\n        title: \"Unauthorised access\",\n        description: \"Please login to make any changes.\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getShoppingList());\n  }, []);\n\n  return (\n    <PageContainer>\n      <Flex\n        width={{ base: '90%', md: '400px' }}\n        bg={colorMode === 'light' ? 'boxBackgroundColor.light' : 'boxBackgroundColor.dark'}\n        rounded='lg'\n        p={5}\n        boxShadow='lg'\n        flexDirection='column'\n        justifyContent='center'\n        alignItems='center'\n      >\n\n        <Flex w='100%' direction='row' >\n          <Badge\n            fontSize=\"0.8em\"\n            colorScheme='primary'\n            justifySelf='flex-start'\n            display={isAuthenticated ? 'inherit' : 'none'}\n          >\n            Hello, {name}\n          </Badge>\n          <Badge\n            fontSize=\"0.8em\"\n            colorScheme='success'\n            justifySelf='flex-end'\n            ml='auto'\n          >\n            {\n              shoppingList.length > 0 ? `${shoppingList.length} ITEMS` : 'NO ITEMS'\n            }\n          </Badge>\n        </Flex>\n\n        {loadingShoppingList === 'success' ?\n          <List spacing='1em' mt='1em' w='100%' p={2}>\n            {\n              shoppingList.map((item, index) => (\n                <Fade in='true' key={index} minW='100%'>\n                  <ListItem w='100%' key={item._id}>\n                    <HStack\n                      display='flex'\n                      w='100%'\n                      spacing={4}\n                    >\n                      <IconButton\n                        aria-label=\"Mark Item\"\n                        variant={item.isChecked ? 'solid' : 'outline'}\n                        size='sm'\n                        colorScheme='success'\n                        icon={<CheckIcon />}\n                        isRound\n                        onClick={() => handleCheck({ id: item._id, isChecked: !item.isChecked })} />\n                      <Text\n                        as={item.isChecked ? 'del' : null}\n                        opacity={item.isChecked ? '0.5' : null}\n                        alignSelf='center'\n                        fontSize='xl'\n                        flexGrow='1'\n                        isTruncated\n                      >\n                        {item.name}\n                      </Text>\n                      <IconButton\n                        aria-label=\"Delete Item\"\n                        variant='solid'\n                        size='sm'\n                        colorScheme='error'\n                        icon={<DeleteIcon />}\n                        isRound\n                        onClick={() => handleDelete({ id: item._id })} />\n                    </HStack>\n                  </ListItem>\n                </Fade>\n              ))\n            }\n          </List>\n          : <CircularProgress isIndeterminate color=\"green.500\" />}\n\n        <Divider orientation=\"horizontal\" my={2} />\n\n        <AddItem />\n\n      </Flex>\n\n    </PageContainer >\n  );\n};\n\nexport default ShoppingList;\n","import React, { useEffect } from 'react';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { useDispatch } from \"react-redux\";\n\nimport customTheme from './utils/theme';\nimport ShoppingList from './components/ShoppingList';\n\nimport { loadUser } from './redux/requests/AuthRequests';\n\n\nfunction App () {\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(loadUser());\n  }, []);\n\n  return (\n    <ChakraProvider theme={customTheme}>\n      <ShoppingList />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { getShoppingList, deleteItem, checkItem, addItem } from '../requests/ItemRequests';\n\n\nconst shoppingListSlice = createSlice({\n  name: 'shoppingList',\n  initialState: {\n    shoppingList: [],\n    loadingShoppingList: null,\n  },\n  extraReducers: {\n    [getShoppingList.fulfilled]: (state, action) => {\n      state.shoppingList = action.payload;\n      state.loadingShoppingList = 'success';\n    },\n    [deleteItem.fulfilled]: (state, action) => {\n      state.shoppingList = state.shoppingList.filter(item => item._id !== action.payload.id);\n    },\n    [checkItem.fulfilled]: (state, action) => {\n      state.shoppingList = (state.shoppingList.map(item => {\n        if (item._id === action.payload.id) {\n          item.isChecked = !item.isChecked;\n        }\n        return { ...item };\n      }));\n    },\n    [addItem.fulfilled]: (state, action) => {\n      state.shoppingList = [{ name: action.payload.name, isChecked: false }, ...state.shoppingList];\n    },\n    [deleteItem.rejected]: (state, action) => {\n      console.log(action.payload.response);\n    }\n\n  }\n\n});\n\n// export const { addItem, deleteItem, checkItem } = shoppingListSlice.actions;\n\n\nexport default shoppingListSlice.reducer;\n\n","import { configureStore } from \"@reduxjs/toolkit\";\n\n// import TodosSlice from \"./slices/TodosSlice\";\n// import TodoDetailsSlice from \"./slices/TodoDetailsSlice\";\nimport shoppingListReducer from './slices/ShoppingListSlice';\nimport authReducer from \"./slices/AuthSlice\";\nimport errorReducer from \"./slices/ErrorSlice\";\n\nconst store = configureStore({\n  reducer: {\n    // todos: TodosSlice,\n    // todoDetails: TodoDetailsSlice,\n    shoppingList: shoppingListReducer,\n    auth: authReducer,\n    error: errorReducer\n  },\n});\n\nexport default store;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from \"./redux/configureStore\";\n\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n\n      <ColorModeScript />\n      <App />\n    </Provider>\n\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}